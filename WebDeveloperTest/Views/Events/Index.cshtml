@model IEnumerable<WebDeveloperTest.Models.Event>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>
<div id="calendar"></div>

<div id="myModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title"><span id="eventTitle"></span></h4>
            </div>
            <div class="modal-body">
                <button id="btnDelete" class="btn btn-default btn-sm pull-right">
                    <span class="glyphicon glyphicon-remove"></span> Remove
                </button>
                <button id="btnEdit" class="btn btn-default btn-sm pull-right" style="margin-right:5px;">
                    <span class="glyphicon glyphicon-pencil"></span> Edit
                </button>
                <p id="pDetails"></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<div id="myModalSave" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Save Event</h4>
            </div>
            <div class="modal-body">
                <form class="form-horizontal">
                    <input type="hidden" id="ID" value="0" />
                    <div class="form-group">
                        <label>Subject</label>
                        <input type="text" id="txtSubject" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label>Start</label>
                        <div class="input-group date" id="dtp1">
                            <input type="text" id="txtStart" class="form-control datepicker" />
                            <span class="input-group-addon">
                                <span class="glyphicon glyphicon-calendar"></span>
                            </span>
                        </div>
                    </div>

                    <div class="form-group">
                        <label>End</label>
                        <div class="input-group date" id="dtp2">
                            <input type="text" id="txtEnd" class="form-control datepicker" />
                            <span class="input-group-addon">
                                <span class="glyphicon glyphicon-calendar"></span>
                            </span>
                        </div>
                    </div>
                    <div class="form-group">
                        <label>Description</label>
                        <textarea id="txtDescription" rows="3" class="form-control"></textarea>
                    </div>

                    <button type="button" id="btnSave" class="btn btn-success">Save</button>
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </form>
            </div>
        </div>
    </div>
</div>


<link href="~/Content/lib/core/main.css" rel="stylesheet" />
<link href="~/Content/lib/daygrid/main.css" rel="stylesheet" />
<link href="~/Content/lib/timegrid/main.css" rel="stylesheet" />
<link href="~/Content/lib/list/main.css" rel="stylesheet" />


@section Scripts{
    <script src="~/Scripts/libs/moment/main.js"></script>
    <script src="~/Scripts/libs/core/main.js"></script>
    <script src="~/Scripts/libs/interaction/main.js"></script>
    <script src="~/Scripts/libs/daygrid/main.js"></script>
    <script src="~/Scripts/libs/timegrid/main.js"></script>
    <script src="~/Scripts/libs/list/main.js"></script>

    <script>

        $(document).ready(function () {
            var calendar = null;
            let events = [];
            var selectedEvent = null;

            loadEvents();
            datePicker();

            // function to generate the full calendar 
            function generateCalendar(events) {

                if (calendar) {
                    calendar.destroy();
                }
                 calendar = new FullCalendar.Calendar(document.getElementById('calendar'), {

                    plugins: ['interaction', 'dayGrid', 'timeGrid', 'list'],
                    defaultDate: new Date(),
                    timeFormat: 'h(:mm)a',
                    header: {
                        left: 'prev,next today',
                        center: 'title',
                        right: 'dayGridMonth,timeGridWeek,timeGridDay,listMonth'
                    },
                    defaultDate: '2019-06-20',
                    weekNumbers: true,
                    navLinks: true, // can click day/week names to navigate views
                    editable: true,
                    eventLimit: true, // allow "more" link when too many events
                    eventRender: function (info) {
                        console.log(info.event.extendedProps.description);
                    },
                    eventClick: function (calEvent) {
                        selectedEvent = calEvent.event
                        $('#myModal #eventTitle').text(calEvent.event.title);
                        var $description = $('<div/>');
                        var NOW = moment(calEvent.event.start).format("YYYY-MM-DD");
                        $description.append($('<p/>').html('<b>Start:</b>' + moment(calEvent.event.start).format("YYYY-MM-DD")));
                        if (calEvent.event.end != null) {
                            $description.append($('<p/>').html('<b>End:</b>' + moment(calEvent.event.end).format("YYYY-MM-DD")));
                        }
                        $description.append($('<p/>').html('<b>Description:</b>' + calEvent.event.extendedProps.description));
                        $('#myModal #pDetails').empty().html($description);

                        $('#myModal').modal();
                        //alert('event has been clicked!');
                    },
                    selectable: true,
                    select: function (start) {
                        console.log(e);
                        selectedEvent = {
                            id: 0,
                            title: '',
                            description: '',
                            start: start.dateStr,
                            end: '',

                        };
                        $('#myModalSave').modal();
                    },
                    editable: true,
                    eventDrop: function (event) {
                        var data = {
                            Id: event.id,
                            Subject: event.title,
                            Start: event.start,
                            End: event.end != null ? event.end : null,
                            Description: event.description,

                        };
                        SaveEvent(data);
                    },
                    dateClick: function (e) {
                        console.log(e);
                        selectedEvent = {
                            id: 0,
                            title: '',
                            description: '',
                            start: e.dateStr,
                            end: '',

                        };
                        $('#txtStart').val(selectedEvent.start);
                        $('#myModalSave').modal();

                    },
                    events: events

                });
                calendar.render();
            }

            $('#btnEdit').click(function () {
                //Open modal dialog for edit event
                openAddEditForm();
            })

            // function to send id to controller and reload calendar
            $('#btnDelete').click(function () {
                if (selectedEvent != null && confirm('Are you sure?')) {
                    $.ajax({
                        type: "POST",
                        url: '/Events/deleteevent',
                        data: { 'id': selectedEvent.id },
                        success: function (data) {
                            if (data) {
                                //Refresh the calender
                                loadEvents();
                                $('#myModal').modal('hide');
                            }
                        },
                        error: function () {
                            alert('Failed');
                        }
                    })

                }
            })


            // function to open add edit modal
            function openAddEditForm() {

                if (selectedEvent != null) {
                    $('#ID').val(selectedEvent.id);
                    $('#txtSubject').val(selectedEvent.title);
                    $('#txtStart').val(moment(selectedEvent.start).format("YYYY-MM-DD"));
                    if (selectedEvent.end == null) {
                        $('#txtEnd').val(moment(selectedEvent.start).format("YYYY-MM-DD"));
                    }
                    else {
                        $('#txtEnd').val(moment(selectedEvent.end).format("YYYY-MM-DD"));
                    }
                    $('#txtDescription').val(selectedEvent.extendedProps.description);
                }
                $('#myModal').modal('hide');
                $('#myModalSave').modal();
            }



            $('#btnSave').click(function () {
                //Validation/
                if ($('#txtSubject').val().trim() == "") {
                    alert('Subject required');
                    return;
                }
                if ($('#txtStart').val().trim() == "") {
                    alert('Start date required');
                    return;
                }
                else {
                    var startDate = moment($('#txtStart').val(), "DD/MM/YYYY HH:mm A").toDate();
                    var endDate = moment($('#txtEnd').val(), "DD/MM/YYYY HH:mm A").toDate();
                    if (startDate > endDate) {
                        alert('Invalid end date');
                        return;
                    }
                }

                var data = {
                    Id: $('#ID').val(),
                    Name: $('#txtSubject').val().trim(),
                    StartDate: $('#txtStart').val().trim(),
                    FinishDate: $('#txtEnd').val().trim(),
                    Description: $('#txtDescription').val(),
                }
                SaveEvent(data);
                // call function for submit data to the server
            })


            /*Datepicker func*/
            function datePicker() {
                $("#dtp1, #dtp2").datepicker({
                    format: 'yyyy-mm-dd',
                    autoclose: true
                });
            }

            function SaveEvent(data) {
                $.ajax({
                    type: "POST",
                    url: '/Events/saveevent',
                    data: data,
                    success: function (data) {
                        if (data.status) {

                            //loadEvents();
                            //$('#myModalSave').modal('hide');
                        }
                        //Refresh the calender
                        loadEvents();
                        $('#myModalSave').modal('hide');
                    },
                    error: function () {
                        alert('Failed');
                    }
                })
            }
            function loadEvents(data) {
                requisicaoAjaxAsync('GET', 'application/json', `${urlbase}Events/getevents/`, data,
                    function (data) {
                        events = [];
                        $.each(data, function (i, v) {
                            events.push({
                                id: v.id,
                                title: v.name,
                                description: v.description,
                                start: v.startDate,
                                end: v.finishDate
                            })
                        })
                        generateCalendar(events);
                    })

            }


        })



    </script>
}

